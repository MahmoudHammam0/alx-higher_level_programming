The '0-add_integer' test module
================================
Using 'add_integer' function
-----------------------------
First importing the module:
>>> add_integer = __import__('0-add_integer').add_integer


Test case (positive ints):
--------------------------
>>> add_integer(1, 1)
2


Test case (negative ints):
--------------------------
>>> add_integer(-2, -1)
-3


Test case (floats):
-------------------
>>> add_integer(2.5, 3.7)
5


Test case (a = string argument):
--------------------------------
>>> add_integer("Hello", 2)
Traceback (most recent call last):
...
TypeError: a must be an integer


Test case (b = list argument):
------------------------------
>>> add_integer(5, [1, 2, 3, 4])
Traceback (most recent call last):
...
TypeError: b must be an integer


Test case (None argument):
--------------------------
>>> add_integer(None)
Traceback (most recent call last):
...
TypeError: a must be an integer


Test case (one argument):
-------------------------
>>> add_integer(2)
100


Test case (no arguments):
-------------------------
>>> add_integer()
Traceback (most recent call last):
...
TypeError: add_integer() missing 1 required positional argument: 'a'


Test case (adding two negative floats):
---------------------------------------
>>> add_integer(-20.127, -50.65)
-70

The '3-say_my_name' test module
================================
Using 'say_my_name' function
-----------------------------
First import module:
>>> say_my_name = __import__('3-say_my_name').say_my_name


Test case (no arguments):
-------------------------
>>> say_my_name()
Traceback (most recent call last):
...
TypeError: say_my_name() missing 1 required positional argument: 'first_name'


Test case (one invalid argument (number)):
------------------------------------------
>>> say_my_name(5)
Traceback (most recent call last):
...
TypeError: first_name must be a string


Test case (one valid argument):
-------------------------------
>>> say_my_name("Henry")
My name is Henry 


Test case (valid and invalid arguments):
----------------------------------------
>>> say_my_name("Henry", 2.5)
Traceback (most recent call last):
...
TypeError: last_name must be a string


Test case (two valid arguments):
--------------------------------
>>> say_my_name("Henry", "Hanover")
My name is Henry Hanover


Test case (more than two arguments):
------------------------------------
>>> say_my_name("Henry", "The", "Second")
Traceback (most recent call last):
...
TypeError: say_my_name() takes from 1 to 2 positional arguments but 3 were given


Test case (None argument):
--------------------------
>>> say_my_name(None)
Traceback (most recent call last):
...
TypeError: first_name must be a string


Test case (list argument):
---------------------------
>>> say_my_name(["Henry", "Hanover"])
Traceback (most recent call last):
...
TypeError: first_name must be a string


Test case (empty string):
-------------------------
>>> say_my_name("")
My name is  


Test case (one empty string and a name):
----------------------------------
>>> say_my_name("", "Walter")
My name is  Walter

The '2-matrix_divided' test module
===================================
Using 'matrix_divided' function
---------------------------------
First import module:
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided


Test case (no arguments):
-------------------------
>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'


Test case (one argument):
------------------------------
>>> matrix_divided(3)
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 1 required positional argument: 'div'


Test case (two valid arguments):
--------------------------------
>>> matrix_divided([[1, 2], [5, 6]], 2)
[[0.5, 1.0], [2.5, 3.0]]


Test case (floats arguments):
-----------------------------
>>> a = [[2.5, 3.8, 5.9], [2.6, 6.5, 10.5]]
>>> matrix_divided(a, 2.5)
[[1.0, 1.52, 2.36], [1.04, 2.6, 4.2]]


Test case (div not number):
---------------------------
>>> a = [[2.5, 3.8, 5.9], [2.6, 6.5, 10.5]]
>>> matrix_divided(a, "Hello")
Traceback (most recent call last):
...
TypeError: div must be a number


Test case (div = 0):
--------------------
>>> a = [[2.5, 3.8, 5.9], [2.6, 6.5, 10.5]]
>>> matrix_divided(a, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero


Test case (div is float):
-------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0.5)
[[2.0, 4.0, 6.0], [8.0, 10.0, 12.0]]


Test case (no matrix):
----------------------
>>> matrix_divided({}, 5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test case (different rows size):
--------------------------------
>>> a = [[2.5, 3.8, 5.9], [2.6, 6.5, 10.5, 8, 10]]
>>> matrix_divided(a, 1.5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size


Test case (negative numbers):
-----------------------------
>>> matrix_divided([[-2, -3], [-4,-6], [-10, -3]], -2)
[[1.0, 1.5], [2.0, 3.0], [5.0, 1.5]]


Test case (empty matrix):
-------------------------
>>> matrix_divided([], 2.5)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test case (empty rows):
-----------------------
>>> matrix_divided([[]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test case (row element not number):
-----------------------------------
>>> matrix_divided([[1, 2, "H"], []], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats


Test case (div is None):
-------------------------
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
...
TypeError: div must be a number
